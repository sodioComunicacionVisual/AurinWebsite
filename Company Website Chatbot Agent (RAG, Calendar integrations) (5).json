{
  "name": "Company Website Chatbot Agent (RAG, Calendar integrations)",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "2c22a0b6-98b5-4105-ab07-e2bd4f704951",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        2448,
        736
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "XXl9qS4splZaD3VC",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "name": "calendarAgent",
        "description": "Call this tool for any calendar action.",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "LpmYLHWdvevdwt5e",
          "cachedResultName": "Calendar Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ $json.query }}"
          }
        }
      },
      "id": "60c2a725-1041-418e-b695-a406b2a248e8",
      "name": "calendarAgent",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        3376,
        768
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "name": "RAGagent",
        "description": "Call this tool to answer FAQs about Aurin services, portfolio, and expertise. Pass the user's question as input.",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "IkEdDr98G9p54XDT",
          "cachedResultName": "RAG Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "question": "={{ $json.query }}"
          }
        }
      },
      "id": "344c566f-cee1-4369-a0be-43417dd35407",
      "name": "RAGagent",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        3232,
        1072
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "name": "ticketAgent",
        "description": "Call this tool to create a support ticket. Extract the user's name and email from the conversation. Format: 'name: [Name], email: [Email], description: [Request]'",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "tMyGGwgRHFuqYKg3",
          "cachedResultName": "Ticket Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "ticketData": "={{ $json.query }}"
          }
        }
      },
      "id": "e2ba4ef9-9400-4d97-af0f-5ffed3ed7520",
      "name": "ticketAgent",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        2928,
        896
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "id": "00868722-b7ea-4252-a4ee-9d3e90a4dd7c",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        2688,
        816
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "content": "# Website Chatbot Agent with Modular Sub-Agent Architecture\n\n#### Overview \nThis workflow implements a modular **Website AI Chatbot Assistant** capable of handling multiple types of customer interactions autonomously. Instead of relying on a single large agent to handle all logic and tools, this system routes user queries to specialized sub-agents—each dedicated to a specific function.\n\n By using a manager-style orchestration layer, this approach prevents overloading a single AI model with excessive context, leading to cleaner routing, faster execution, and easier scaling as your automation needs grow.\n\n\n#### How It Works\n\n**1. Chat Trigger**  \n- The flow is initiated when a chat message is received via the website widget.\n\n**2. Manager Agent (Ultimate Website AI Assistant)**  \n- The central LLM-based agent is responsible for parsing the message and deciding which specialized sub-agent to route it to.\n- It uses an OpenAI GPT model for natural language understanding and a lightweight memory system to preserve recent context.\n\n**3. Sub-Agent Routing**  \n- `calendarAgent`: Handles availability checks and books meetings on connected calendars.  \n- `RAGAgent`: Searches company documentation or FAQs to provide accurate responses from your internal knowledge base.  \n- `ticketAgent`: Forwards requests to human support by generating and sending support tickets to a designated email.\n\n---\n\n#### Setup Instructions\n\n1. **Embed the Chatbot**  \n   - Use a custom HTML widget or script to embed the chatbot interface on your website.  \n   - Connect the frontend to the webhook that triggers the `When chat message received` node.\n\n2. **Configure Your OpenAI Key**  \n   - Insert your API key in the `OpenAI Chat Model` node.  \n   - Adjust the model parameters for temperature, max tokens, etc., based on how formal or creative you want the bot to be.\n\n3. **Customize Sub-Agents**  \n   - `calendarAgent`: Connect to your Google or Outlook calendar.  \n   - `RAGAgent`: Link to a vector store or document database via API or native integration.  \n   - `ticketAgent`: Set the destination email and format for ticket generation (e.g. via SendGrid or SMTP).\n\n4. **Deploy in Production**  \n   - Host on n8n Cloud or your self-hosted instance.  \n   - Monitor usage through the Executions tab and refine prompts based on user behavior.\n\n---\n\n#### Benefits\n\n- Modular system with dedicated logic per function  \n- Reduces token bloat by offloading complexity to sub-agents  \n- Easy to scale by adding more tools (e.g. CRM, analytics)  \n- Fast and responsive user experience for customers on your site  \n- Cleaner code structure and easier debugging\n",
        "height": 1480,
        "width": 660
      },
      "id": "e655a4be-1faa-4469-af6a-c86bc7765c1e",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        384,
        -96
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=You are the helpful, friendly chatbot assistant for Aurin (aurin.mx), a design and visual communication agency in Mexico. You don't answer questions yourself, you send every request to the right tool. \n\nAvailable Tools\nRAGagent – Use to answer FAQs and anything about Aurin's services, process, portfolio, and expertise.\ncalendarAgent – Use to check availability and book consultations.\nticketAgent – Use when the user wants a human, you don't have enough info, or you can't complete the request.\n\n\nCore Capabilities\n1. Answer FAQs\nIf a user asks a question about Aurin, our services, process, or portfolio, immediately query the RAGagent.\nNever guess, improvise, or answer on your own.\nNo tool call = no answer.\n\n2. Book Consultations\nIf a user wants to book a consultation or meeting, collect the following information:\nFull name, Company name (optional), Email address, their project goal/needs, preferred day and time (remember: Mexico City timezone, 30-60 min meetings)\n\nProcess:\n-Check their preferred slot with calendarAgent.\n-If unavailable, offer the closest alternate available times on the same day or week. \n-Once they pick a slot, confirm all details (name, email, goal, time).\n-After confirmation, use calendarAgent to book and send them confirmation.\nGolden Rule: Never double book. Always check availability first.\n\n3. Escalate to a Human Agent if any of these happen:\n\n-RAGagent can't find an answer\n-User wants to talk to a human directly\n-You can't complete their request\n-Complex project discussion needed\n\nThen:\nAsk if they'd like to be contacted by the Aurin team. If yes, collect:\nFirst name, Email address, Company (optional), Description of their project or question\nThen, use ticketAgent to create a support ticket that will go to hey@aurin.mx.\n\nRules of Engagement:\n-No improvisation. Tools only.\n-Always clarify if info is missing or unclear.\n-The current date is {{ $now.format('yyyy-MM-dd') }}. You are in the Mexico City timezone (GMT-6). Always confirm this when talking about times.\n-Redirect off-topic conversations. If someone derails the convo away from Aurin or design services, politely steer them back or offer to escalate to a human.\n-Have a friendly, professional, and creative tone of voice - we're a design agency!\n-Use Spanish or English based on the user's language.\n-Default CTA: Always try to understand their project needs and either book them for a consultation or collect their info for the team to follow up.",
          "maxIterations": 10
        }
      },
      "id": "10fb91df-1ebc-4724-ad43-56e3ae41ad4e",
      "name": "Ultimate Website Chatbot Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        2800,
        352
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/chatbot",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        2064,
        352
      ],
      "id": "baa352ea-7d55-4ea7-bf09-607b4d87cc6b",
      "name": "Webhook",
      "webhookId": "f18aca18-5ade-4c75-ab64-1496a980b445"
    },
    {
      "parameters": {
        "jsCode": "const message = $json.body.message;\nconst sessionId = $json.body.sessionId;\nconst metadata = $json.body.metadata || {};\n\n// Formatear para el AI Agent\nreturn [{\n  json: {\n    chatInput: message,\n    sessionId: sessionId,\n    action: \"sendMessage\",\n    metadata: metadata\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2384,
        352
      ],
      "id": "27ffc821-3b53-4e74-9ec7-84328b8b752f",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "success-output",
              "name": "success",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "output-text",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "string"
            },
            {
              "id": "session-id",
              "name": "sessionId",
              "value": "={{ $('Code in JavaScript').item.json.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3072,
        352
      ],
      "id": "6cab12a5-7376-45af-9451-33657c82ebc4",
      "name": "Format Success Response"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        3392,
        352
      ],
      "id": "923e9626-446a-4ca8-a870-329074df4348",
      "name": "Respond Success"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        2800,
        592
      ],
      "id": "6255df9a-41e3-4f27-9e5e-fcffccbf923e",
      "name": "Error Trigger"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "error-output",
              "name": "output",
              "type": "string",
              "value": "Disculpa, tuve un problema procesando tu mensaje. ¿Podrías reformular tu pregunta o contactarnos en hey@aurin.mx?"
            },
            {
              "id": "error-success",
              "name": "success",
              "type": "boolean",
              "value": false
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3072,
        592
      ],
      "id": "3232baa5-ad3b-4284-a4ba-7d0cef276a4c",
      "name": "Format Error Response"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        3392,
        592
      ],
      "id": "8ea6bfb0-c5f0-4343-9c62-a0c2dd6491bd",
      "name": "Respond Error"
    }
  ],
  "pinData": {},
  "connections": {
    "RAGagent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Website Chatbot Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ticketAgent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Website Chatbot Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Ultimate Website Chatbot Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "calendarAgent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Website Chatbot Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Ultimate Website Chatbot Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Ultimate Website Chatbot Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ultimate Website Chatbot Agent": {
      "main": [
        [
          {
            "node": "Format Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Success Response": {
      "main": [
        [
          {
            "node": "Respond Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Trigger": {
      "main": [
        [
          {
            "node": "Format Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Error Response": {
      "main": [
        [
          {
            "node": "Respond Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a846952e-1c34-4228-8d5b-f97d442db625",
  "meta": {
    "instanceId": "473b8e2f44c2c249c630a674e0ffd242a718055278d7a389908825386c510f30"
  },
  "id": "5eVhyM6e69m1mKTy",
  "tags": []
}