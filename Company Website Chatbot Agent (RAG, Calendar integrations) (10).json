{
  "name": "Company Website Chatbot Agent (RAG, Calendar integrations)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/chatbot",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -688,
        -720
      ],
      "id": "2cf4951e-477a-4eb6-bda4-db573283b76b",
      "name": "Webhook",
      "webhookId": "f18aca18-5ade-4c75-ab64-1496a980b445"
    },
    {
      "parameters": {
        "jsCode": "// CÓDIGO MEJORADO - Inyecta fileUrl en el mensaje para que el agente lo vea\n\nconst message = $json.body.message;\nconst sessionId = $json.body.sessionId;\nconst metadata = $json.body.metadata || {};\nconst newFileUrl = $json.body.fileUrl || null;\n\nconsole.log('=== STORE CONTEXT ===');\nconsole.log('Message:', message);\nconsole.log('SessionId:', sessionId);\nconsole.log('FileUrl:', newFileUrl);\n\n// SOLUCIÓN: Agregar fileUrl al mensaje si existe para que el agente lo vea\nlet enhancedMessage = message;\nif (newFileUrl) {\n  enhancedMessage = `${message}\\n\\n[SYSTEM: User attached file: ${newFileUrl}]`;\n  console.log('✅ FileUrl inyectado en el mensaje');\n}\n\nreturn [{\n  json: {\n    chatInput: enhancedMessage,  // Mensaje con info del archivo\n    sessionId: sessionId,\n    action: \"sendMessage\",\n    metadata: metadata,\n    fileUrl: newFileUrl,\n    query: message  // Query original sin modificar\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -368,
        -720
      ],
      "id": "3981d493-581b-424d-9013-dd11b234d6bb",
      "name": "Store Context and FileUrl"
    },
    {
      "parameters": {
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "You are Aurin's chatbot assistant. You route requests to tools - never answer directly.\\n\\nTOOLS:\\n• RAGagent - FAQs about Aurin\\n• calendarAgent - Schedule meetings\\n• ticketAgent - Create support tickets\\n\\nTICKET CREATION:\\nCollect: nombre, email, empresa, servicio, asunto, descripcion, archivoAdjunto\\n\\nIMPORTANT - FILE ATTACHMENTS:\\nWhen you see [SYSTEM: User attached file: URL] in the conversation, extract the URL and include it.\\n\\nEXAMPLE MESSAGE:\\n\\\"Hello\\\\n\\\\n[SYSTEM: User attached file: https://blob.vercel-storage.com/file.png]\\\"\\n\\nEXTRACT: https://blob.vercel-storage.com/file.png\\n\\nJSON FORMAT for ticketAgent (REQUIRED):\\n{\\n  \\\"nombre\\\": \\\"Name\\\",\\n  \\\"email\\\": \\\"email@example.com\\\",\\n  \\\"empresa\\\": \\\"\\\",\\n  \\\"servicio\\\": \\\"Service\\\",\\n  \\\"asunto\\\": \\\"Subject\\\",\\n  \\\"descripcion\\\": \\\"Description\\\",\\n  \\\"archivoAdjunto\\\": \\\"https://extracted-url-here or empty string\\\"\\n}\\n\\nRULES:\\n1. If [SYSTEM: User attached file: URL] appears ANYWHERE in conversation → extract URL → put in archivoAdjunto\\n2. Always use empty string \\\"\\\" if no data (NEVER use null)\\n3. Speak Spanish naturally",
          "maxIterations": 10
        }
      },
      "id": "7699dca8-7c57-4ee2-8e23-067dddabde3a",
      "name": "Ultimate Website Chatbot Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        48,
        -720
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "7753e5b2-d44a-410e-93b7-e3af3960d0ae",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        -304,
        -336
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "LuAH534UcVVRH45R",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 10
      },
      "id": "4e567709-b60c-4e0a-ae5c-bf1dbe1ded23",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        -64,
        -256
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "name": "ticketAgent",
        "description": "Call this tool to create a support ticket. Collect: name, email, company, specific service needed, subject/reason, description, and optional file attachment. Format all data clearly for ticket creation.",
        "workflowId": {
          "__rl": true,
          "value": "xofJhOkiHd6ietuS",
          "mode": "list",
          "cachedResultUrl": "/workflow/xofJhOkiHd6ietuS",
          "cachedResultName": "Ticket Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ $json.query }}"
          }
        }
      },
      "id": "e0d8845a-16a8-4e49-b5c4-6f71770c5b8b",
      "name": "ticketAgent",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        176,
        -160
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "name": "RAGagent",
        "description": "Call this tool to answer FAQs about Aurin services, portfolio, and expertise. Pass the user's question as input.",
        "workflowId": {
          "__rl": true,
          "value": "rPEVrWKRByrpoSC6",
          "mode": "list",
          "cachedResultUrl": "/workflow/rPEVrWKRByrpoSC6",
          "cachedResultName": "RAG Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "question": "={{ $json.query }}"
          }
        }
      },
      "id": "76b19326-d951-4723-a7d1-eac921579071",
      "name": "RAGagent",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        480,
        32
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "name": "calendarAgent",
        "description": "Call this tool for any calendar action.",
        "workflowId": {
          "__rl": true,
          "value": "qjGXYKG8lfA6iKPx",
          "mode": "list",
          "cachedResultUrl": "/workflow/qjGXYKG8lfA6iKPx",
          "cachedResultName": "Calendar Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ $json.query }}"
          }
        }
      },
      "id": "9a2196d8-80f7-41cc-abba-9b3734bb6cc5",
      "name": "calendarAgent",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        624,
        -304
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "success-output",
              "name": "success",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "output-text",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "string"
            },
            {
              "id": "session-id",
              "name": "sessionId",
              "value": "={{ $('Store Context and FileUrl').first().json.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        320,
        -720
      ],
      "id": "80d69fb8-d8eb-493f-9f65-90e9f971a593",
      "name": "Format Success Response"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        640,
        -720
      ],
      "id": "f018bd5e-d441-49a5-8c15-2c0ed5ba640b",
      "name": "Respond Success"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Store Context and FileUrl",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store Context and FileUrl": {
      "main": [
        [
          {
            "node": "Ultimate Website Chatbot Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ultimate Website Chatbot Agent": {
      "main": [
        [
          {
            "node": "Format Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Success Response": {
      "main": [
        [
          {
            "node": "Respond Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Ultimate Website Chatbot Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Ultimate Website Chatbot Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "ticketAgent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Website Chatbot Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "RAGagent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Website Chatbot Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "calendarAgent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Website Chatbot Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2dc2769a-eb01-4b2c-bda5-24adf825de45",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "473b8e2f44c2c249c630a674e0ffd242a718055278d7a389908825386c510f30"
  },
  "id": "5eVhyM6e69m1mKTy",
  "tags": []
}