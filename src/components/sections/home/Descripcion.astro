---
import ScrollReveal from '../../ui/ScrollReveal.astro';
import { getLangFromUrl } from '../../../i18n/utils.js';
import { translations } from '../../../i18n/translations.js';
import styles from './Descripcion.module.css';

// Detect current language
const currentLang = getLangFromUrl(Astro.url);
const t = translations[currentLang];
---

<section class={styles.descripcion}>
  <div class={styles.descripcionContainer}>
    <!-- Left column -->
    <div class={styles.leftColumn}>
      <ScrollReveal 
        text={t.descripcion.mainHeading}
        tag="h2"
        textClass={styles.headingHighlight}
        baseOpacity={0.2}
        baseRotation={4}
        blurStrength={5}
        enableBlur={true}
      />
      
      <div class={styles.contentText}>
        <p>
          {t.descripcion.contentText}<br/>
          <strong class={styles.textHighlight}>{t.descripcion.contentHighlight}</strong> {t.descripcion.contentContinue}
        </p>
      </div>
    </div>
    
    <!-- Right column -->
    <div class={styles.rightColumn}>
      <div class={styles.svgWrapper}>
        <img src="https://pub-d17bbbdbf8e348c5a57c8168ad69c92f.r2.dev/LightSVG.svg" alt="Light SVG" class={styles.svgElement} />
        <div class={styles.parallaxTextSmall} data-parallax-small>{t.descripcion.parallaxSmall}</div>
        <div class={styles.parallaxTextLarge} data-parallax-large>{t.descripcion.parallaxLarge}</div>
      </div>
    </div>
  </div>
</section>


<script>
  import { scroll, animate } from 'motion';

  document.addEventListener('DOMContentLoaded', () => {
    const smallText = document.querySelector('[data-parallax-small]') as HTMLElement;
    const largeText = document.querySelector('[data-parallax-large]') as HTMLElement;

    if (smallText) {
      scroll(
        animate(smallText, { y: [0, 40] }),
        {
          target: smallText,
          offset: ['start end', 'end start']
        }
      );
    }

    if (largeText) {
      scroll(
        animate(largeText, { y: [0, -60] }),
        {
          target: largeText,
          offset: ['start end', 'end start']
        }
      );
    }
  });
</script>
