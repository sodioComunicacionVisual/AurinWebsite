---
import MainButton from '../../ui/MainButton.astro';
import Card from '../../ui/Card.astro';
import { getLangFromUrl } from '../../../i18n/utils.js';
import { translations } from '../../../i18n/translations.js';
import styles from './Especialidades.module.css';

// Detect current language
const currentLang = getLangFromUrl(Astro.url);
const t = translations[currentLang];
---

<section class={styles.especialidades}>
  <div class={styles.especialidadesContainer}>
    <!-- Left content section -->
    <div class={styles.contentSection}>
      <div class={styles.heading}>
        <span class={styles.headingNormal}>{t.especialidades.heading}<br/></span>
        <span class={styles.headingHighlight}>{t.especialidades.headingHighlight}</span>
      </div>
      
      <p class={styles.description}>
        Cada idea se convierte en un recorrido único, diseñado para inspirar y conectar.
      </p>
      
      <MainButton 
        text={t.especialidades.buttonText}
        href="/servicios"
      />
    </div>
    
    <!-- Right cards section -->
    <div class={styles.cardsSection}>
      <div class={styles.cardsGrid}>
        <Card 
          letter="M"
          title={t.especialidades.card1Title}
        />
        <Card 
          letter="E"
          title={t.especialidades.card2Title}
        />
        <Card 
          letter="D"
          title={t.especialidades.card3Title}
        />
      </div>
    </div>
  </div>
</section>



<script>
  document.addEventListener('DOMContentLoaded', () => {
    const cards = document.querySelectorAll('.especialidades .card');

    const observerOptions = {
      threshold: 0.2,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('is-visible');
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);

    cards.forEach((card, index) => {
      // Añadir delay escalonado
      (card as HTMLElement).style.transitionDelay = `${index * 0.15}s`;
      observer.observe(card);
    });
  });
</script>
