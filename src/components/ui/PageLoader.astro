---
import styles from './PageLoader.module.css';
import { getLangFromUrl } from '../../i18n/utils.js';
import { translations } from '../../i18n/translations.js';

export interface Props {
  loadingText?: string;
  lang?: string;
}

// Detectar idioma de la URL actual o usar el prop lang
const detectedLang = getLangFromUrl(Astro.url);
const currentLang = Astro.props.lang || detectedLang;

// Función de traducción local
function getLoadingText(lang: string): string {
  const langTranslations = translations[lang as keyof typeof translations];
  return langTranslations?.common?.loading || translations.es.common.loading;
}

// Obtener texto de loading traducido
const loadingText = Astro.props.loadingText || getLoadingText(currentLang);
---

<div id="preloader" class={styles.preloader}>
  <svg viewBox="0 0 1000 1000" preserveAspectRatio="none">
    <path
      id="curve-path"
      d="M0,1005S175,995,500,995s500,5,500,5V0H0Z"
    />
  </svg>
  <div class={styles['preloader-heading']}>
    <div class={styles['logo-container']}>
      <img 
        src="https://pub-d17bbbdbf8e348c5a57c8168ad69c92f.r2.dev/AurinTinyWhiteLogo.svg" 
        alt="Aurin Logo" 
        class={styles['aurin-logo']}
      />
    </div>
  </div>
</div>



<script>
  document.addEventListener('DOMContentLoaded', () => {
    const preloader = document.getElementById('preloader');
    const body = document.body;

    if (preloader) {
      // Block scroll immediately
      body.classList.add('preloader-active');

      // Remove the preloader from DOM and restore scroll after all animations complete
      setTimeout(() => {
        body.classList.remove('preloader-active');
        preloader.remove();
      }, 3400);
    }
  });
</script>
