---
import { Menu, Globe } from 'lucide-astro';
import { getLangFromUrl, getLocalizedUrl, getAlternateLanguage } from '../../i18n/utils.js';
import { translations } from '../../i18n/translations.js';

interface Props {
  class?: string;
}

const { class: className } = Astro.props;

// Detect current language
const currentLang = getLangFromUrl(Astro.url);
const alternateLang = getAlternateLanguage(currentLang);
const t = translations[currentLang];

// Generate alternate URL for language switching
const currentPath = Astro.url.pathname;
let alternateUrl = getLocalizedUrl(currentPath, alternateLang);

// Handle specific page mappings
if (currentPath === '/nosotros' && alternateLang === 'en') {
  alternateUrl = '/en/about';
} else if (currentPath === '/en/about' && alternateLang === 'es') {
  alternateUrl = '/nosotros';
} else if (currentPath === '/servicios' && alternateLang === 'en') {
  alternateUrl = '/en/services';
} else if (currentPath === '/en/services' && alternateLang === 'es') {
  alternateUrl = '/servicios';
} else if (currentPath === '/contacto' && alternateLang === 'en') {
  alternateUrl = '/en/contact';
} else if (currentPath === '/en/contact' && alternateLang === 'es') {
  alternateUrl = '/contacto';
} else if (currentPath === '/proyectos' && alternateLang === 'en') {
  alternateUrl = '/en/projects';
} else if (currentPath === '/en/projects' && alternateLang === 'es') {
  alternateUrl = '/proyectos';
}
---

<header class={`header ${className || ''}`}>
  <div class="header-container">
    <!-- Logo Section -->
    <a href={currentLang === 'es' ? '/' : '/en'} class="logo-link" aria-label={currentLang === 'es' ? 'Ir a inicio' : 'Go to home'}>
      <img
        class="header-logo"
        src="https://pub-d17bbbdbf8e348c5a57c8168ad69c92f.r2.dev/AurinTinyWhiteLogo.svg"
        alt="Aurin Logo"
      />
    </a>

    <!-- Actions Section -->
    <div class="actions-section">
      <!-- Language Toggle Button -->
      <a 
        href={alternateUrl} 
        class="lang-button" 
        aria-label={currentLang === 'es' ? t.header.switchToEnglish : t.header.switchToSpanish}
      >
        <Globe size={20} />
        <span>{alternateLang.toUpperCase()}</span>
      </a>

      <!-- Menu Button -->
      <button class="menu-button" data-menu-trigger aria-label={currentLang === 'es' ? 'Abrir menÃº' : 'Open menu'}>
        <span class="menu-text">{t.header.menu}</span>
        <div class="menu-icon">
          <div class="menu-icon-bg"></div>
          <Menu size={24} strokeWidth={2.5} class="menu-icon-svg" />
        </div>
      </button>
    </div>
  </div>
</header>

<style>
  .header {
    width: 100%;
    background: rgba(10, 10, 10, 0.30);
    backdrop-filter: blur(10px);
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1000;
    transform: translateY(0);
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.4s ease;
    opacity: 1;
  }

  .header.header-hidden {
    transform: translateY(-100%);
    opacity: 0;
  }

  .header.header-visible {
    transform: translateY(0);
    opacity: 1;
  }

  .header-container {
    max-width: var(--maxWidth);
    margin: 0 auto;
    padding: 20px 100px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  /* Logo Section */
  .logo-link {
    display: flex;
    align-items: center;
    text-decoration: none;
    transition: opacity 0.3s ease;
  }

  .logo-link:hover {
    opacity: 0.8;
  }

  .header-logo {
    height: 40px;
    width: auto;
    object-fit: contain;
    filter: brightness(0.85);
  }

  /* Navigation Section */
  .nav-section {
    display: flex;
    align-items: center;
    gap: 40px;
    flex: 1;
    justify-content: center;
  }

  .nav-link {
    color: white;
    font-family: 'Titillium Web', sans-serif;
    font-size: 18px;
    font-weight: 400;
    text-decoration: none;
    position: relative;
    transition: color 0.3s ease;
  }

  .nav-link::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 0;
    height: 2px;
    background: #D0DF00;
    transition: width 0.3s ease;
  }

  .nav-link:hover {
    color: #D0DF00;
  }

  .nav-link:hover::after {
    width: 100%;
  }

  .nav-link.active {
    color: #D0DF00;
  }

  .nav-link.active::after {
    width: 100%;
  }

  /* Actions Section */
  .actions-section {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: 20px;
  }

  /* Language Button */
  .lang-button {
    display: flex;
    align-items: center;
    gap: 8px;
    background: transparent;
    border: 1px solid rgba(208, 223, 0, 0.3);
    color: white;
    padding: 8px 16px;
    border-radius: 8px;
    font-family: 'Titillium Web', sans-serif;
    font-size: 16px;
    font-weight: 400;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
  }

  .lang-button:hover {
    background: rgba(208, 223, 0, 0.1);
    border-color: #D0DF00;
  }

  .lang-button span {
    line-height: 1;
  }

  /* Menu Button */
  .menu-button {
    display: flex;
    align-items: center;
    gap: 20px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
  }

  .menu-text {
    color: white;
    font-size: 20px;
    font-family: 'Titillium Web', sans-serif;
    font-weight: 400;
    line-height: 22px;
  }

  .menu-icon {
    width: 48px;
    height: 48.91px;
    position: relative;
    transform: rotate(180deg);
    overflow: hidden;
  }

  .menu-icon-bg {
    width: 47.66px;
    height: 47.66px;
    position: absolute;
    left: 0.34px;
    top: 0.34px;
    background: #D0DF00;
    border-radius: 9999px;
    transition: transform 0.3s ease;
  }

  .menu-icon-svg {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%) rotate(180deg);
    color: #0A0A0A;
    z-index: 1;
  }

  .menu-button:hover .menu-icon-bg {
    transform: scale(1.05);
  }

  /* Responsive Design */
  @media (max-width: 1200px) {
    .header-container {
      padding: 20px 60px;
    }

    .header-logo {
      height: 35px;
    }

    .nav-section {
      gap: 30px;
    }

    .nav-link {
      font-size: 16px;
    }
  }

  @media (max-width: 968px) {
    .nav-section {
      display: none;
    }
  }

  @media (max-width: 768px) {
    .header-container {
      padding: 15px 30px;
    }

    .header-logo {
      height: 30px;
    }

    .menu-text {
      font-size: 18px;
    }

    .actions-section {
      gap: 15px;
    }

    .lang-button {
      padding: 6px 12px;
      font-size: 14px;
    }

    .menu-icon {
      width: 44px;
      height: 44px;
    }

    .menu-icon-bg {
      width: 43px;
      height: 43px;
    }
  }

  @media (max-width: 640px) {
    .header-container {
      padding: 15px 20px;
    }

    .header-logo {
      height: 28px;
    }

    .menu-text {
      font-size: 16px;
    }

    .actions-section {
      gap: 12px;
    }

    .lang-button {
      padding: 5px 10px;
      font-size: 13px;
      gap: 6px;
    }

    .lang-button :global(svg) {
      width: 16px;
      height: 16px;
    }

    .menu-icon {
      width: 40px;
      height: 40px;
    }

    .menu-icon-bg {
      width: 39px;
      height: 39px;
    }

    .menu-icon-svg {
      width: 20px;
      height: 20px;
    }
  }

  @media (max-width: 480px) {
    .header-container {
      padding: 12px 16px;
    }

    .header-logo {
      height: 24px;
    }

    .menu-text {
      display: none;
    }

    .actions-section {
      gap: 10px;
    }

    .lang-button {
      padding: 6px 10px;
      font-size: 12px;
    }

    .menu-icon {
      width: 36px;
      height: 36px;
    }

    .menu-icon-bg {
      width: 35px;
      height: 35px;
    }
  }

  @media (max-width: 360px) {
    .header-container {
      padding: 10px 12px;
    }

    .header-logo {
      height: 22px;
    }

    .lang-button span {
      display: none;
    }

    .lang-button {
      padding: 6px;
      min-width: 32px;
      justify-content: center;
    }
  }
</style>

<script>
  function initHeader() {
    // Set active navigation link
    const currentPath = window.location.pathname;
    const navLinks = document.querySelectorAll('.nav-link');
    
    navLinks.forEach(link => {
      const href = link.getAttribute('href');
      if (href && (href === currentPath || (currentPath === '/' && href === '/'))) {
        link.classList.add('active');
      } else if (href && href !== '/' && currentPath.startsWith(href)) {
        link.classList.add('active');
      } else {
        link.classList.remove('active');
      }
    });

    // Menu button functionality
    const menuButtons = document.querySelectorAll('[data-menu-trigger]');
    
    menuButtons.forEach(button => {
      button.addEventListener('click', () => {
        document.dispatchEvent(new CustomEvent('toggle-mega-menu'));
      });
    });

    // Language button functionality
    const langButtons = document.querySelectorAll('.lang-button');
    
    langButtons.forEach(button => {
      button.addEventListener('click', () => {
        console.log('Language button clicked - switch to English');
        // window.location.href = '/en';
      });
    });

    // Header scroll behavior
    const header = document.querySelector('.header');
    if (!header) return;

    let lastScrollY = window.scrollY;
    let ticking = false;

    const updateHeader = () => {
      const currentScrollY = window.scrollY;
      
      // Show header at top of page
      if (currentScrollY <= 0) {
        header.classList.remove('header-hidden');
        header.classList.add('header-visible');
      }
      // Hide header when scrolling down
      else if (currentScrollY > lastScrollY && currentScrollY > 100) {
        header.classList.add('header-hidden');
        header.classList.remove('header-visible');
      }
      // Show header when scrolling up
      else if (currentScrollY < lastScrollY) {
        header.classList.remove('header-hidden');
        header.classList.add('header-visible');
      }

      lastScrollY = currentScrollY;
      ticking = false;
    };

    const onScroll = () => {
      if (!ticking) {
        window.requestAnimationFrame(updateHeader);
        ticking = true;
      }
    };

    window.addEventListener('scroll', onScroll, { passive: true });
  }

  // Initialize on page load
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initHeader);
  } else {
    initHeader();
  }

  // Re-initialize on navigation
  document.addEventListener('astro:page-load', initHeader);
</script>
