---
import ProjectCard from './ProjectCard.astro';
import ButtonIsland from './ButtonIsland.astro';
import ScrollReveal from './ScrollReveal.astro';
import { getLangFromUrl } from '../../i18n/utils.js';
import { translations } from '../../i18n/translations.js';
import { PayloadAPI, getProjectUrl, getImageUrl } from '../../lib/payload';
import styles from './Projects.module.css';

// Detect current language
const currentLang = getLangFromUrl(Astro.url);
const t = translations[currentLang];

// Function to shuffle array randomly
function shuffleArray<T>(array: T[]): T[] {
  const shuffled = [...array];
  for (let i = shuffled.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
  }
  return shuffled;
}

// Fetch all projects from Payload CMS and randomize them
let projects = [];
try {
  // Get all projects and shuffle them randomly
  const allProjects = await PayloadAPI.getProjects(currentLang);
  const shuffledProjects = shuffleArray(allProjects);
  // Take first 3 random projects (maximum)
  projects = shuffledProjects.slice(0, 3);
} catch (error) {
  console.error('Error fetching projects:', error);
  // Fallback to empty array if CMS is not available
  projects = [];
}
---

<section class={styles.projects}>
  <div class={styles.projectsContainer}>
    <!-- Header section -->
    <div class={styles.headerSection}>
      <ScrollReveal 
        text={t.projects.heading}
        tag="h2"
        textClass={styles.heading}
        containerClass={styles.headingWrapper}
        baseOpacity={0.15}
        baseRotation={5}
        blurStrength={6}
        enableBlur={true}
      />
      
      <ButtonIsland
        text={t.projects.buttonText}
        href={currentLang === 'es' ? '/proyectos-payload' : '/en/projects'}
        variant="primary"
      />
    </div>

    <!-- Projects grid -->
    <div class={styles.projectsGrid}>
      {projects.length > 0 ? (
        projects.map((project) => (
          <ProjectCard
            title={project.title}
            tags={[
              project.category.name,
              ...(project.tags?.slice(0, 1).map(tag => tag.name) || [])
            ]}
            image={getImageUrl(project.hero.bannerImage?.url) || 'https://placehold.co/800x600?text=No+Image'}
            href={getProjectUrl(project, currentLang)}
          />
        ))
      ) : (
        <!-- Fallback projects if CMS is not available (maximum 3) -->
        <>
          <ProjectCard
            title="Galicia"
            tags={[t.projects.tags.uxui, t.projects.tags.frontBack]}
            image="https://pub-d17bbbdbf8e348c5a57c8168ad69c92f.r2.dev/ProjectGalicia.webp"
            href="/proyectos/galicia"
          />

          <ProjectCard
            title="Sinfonica de<br/>Minería"
            tags={[t.projects.tags.uxui, t.projects.tags.frontBack]}
            image="https://pub-d17bbbdbf8e348c5a57c8168ad69c92f.r2.dev/ProjectSinfonica.webp"
            href="/proyectos/sinfonica"
          />

          <ProjectCard
            title="SAI Derecho y economía"
            tags={[t.projects.tags.uxui, t.projects.tags.frontBack]}
            image="https://pub-d17bbbdbf8e348c5a57c8168ad69c92f.r2.dev/ProjectSai.webp"
            href="/proyectos/sai"
          />
        </>
      )}
    </div>
  </div>
</section>
