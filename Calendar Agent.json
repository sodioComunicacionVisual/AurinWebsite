{
  "name": "Calendar Agent",
  "nodes": [
    {
      "parameters": {},
      "id": "6d820d76-2e77-480d-9c11-368f55ef9dff",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "jsCode": "// Extraer informaci√≥n de la consulta\nconst query = $input.item.json.query || '';\n\n// Detectar si es consulta de disponibilidad o reserva\nconst isCheckingAvailability = /(?:disponibilidad|available|horarios|cuando)/i.test(query);\nconst isBooking = /(?:agendar|reservar|book|programar)/i.test(query);\n\n// Extraer fecha si existe\nconst dateMatch = query.match(/(?:ma[√±n]ana|tomorrow|lunes|martes|miercoles|jueves|viernes|monday|tuesday|wednesday|thursday|friday)/i);\nconst timeMatch = query.match(/(\\d{1,2})(?::|\\s)?(?:(\\d{2}))\\s?(am|pm)?/i);\n\nreturn {\n  json: {\n    query: query,\n    action: isBooking ? 'book' : 'check_availability',\n    requestedDate: dateMatch ? dateMatch[0] : null,\n    requestedTime: timeMatch ? timeMatch[0] : null\n  }\n};"
      },
      "id": "1ad6814b-0c5a-4934-bc96-0020c831c845",
      "name": "Parse Calendar Request",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        0
      ]
    },
    {
      "parameters": {
        "jsCode": "// Simular disponibilidad del calendario\nconst action = $input.item.json.action;\nconst requestedDate = $input.item.json.requestedDate;\nconst requestedTime = $input.item.json.requestedTime;\n\n// Horarios disponibles simulados (GMT-6 Mexico City)\nconst availableSlots = [\n  { day: 'Lunes', times: ['10:00 AM', '2:00 PM', '4:00 PM'] },\n  { day: 'Martes', times: ['11:00 AM', '3:00 PM'] },\n  { day: 'Mi√©rcoles', times: ['10:00 AM', '1:00 PM', '5:00 PM'] },\n  { day: 'Jueves', times: ['9:00 AM', '2:00 PM', '4:00 PM'] },\n  { day: 'Viernes', times: ['10:00 AM', '12:00 PM', '3:00 PM'] }\n];\n\nlet response = '';\n\nif (action === 'check_availability') {\n  response = `üìÖ **Horarios disponibles esta semana (Zona horaria: Ciudad de M√©xico GMT-6)**\\n\\n`;\n  \n  availableSlots.forEach(slot => {\n    response += `**${slot.day}:** ${slot.times.join(', ')}\\n`;\n  });\n  \n  response += `\\n¬øQu√© d√≠a y hora te acomoda mejor? Las consultas duran entre 30-60 minutos.`;\n} else if (action === 'book') {\n  // Aqu√≠ integrar√≠as con Google Calendar API\n  response = `‚úÖ Perfecto! Para confirmar tu cita necesito:\\n\\n1. Tu nombre completo\\n2. Email de contacto\\n3. Empresa (opcional)\\n4. Breve descripci√≥n de tu proyecto\\n5. D√≠a y hora preferida\\n\\n¬øMe puedes proporcionar esta informaci√≥n?`;\n}\n\nreturn {\n  json: {\n    output: response,\n    success: true,\n    availableSlots: availableSlots,\n    action: action\n  }\n};"
      },
      "id": "99c8e5cc-30ce-4bdf-b786-110ff32d9dca",
      "name": "Check Calendar Availability",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        0
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Parse Calendar Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Calendar Request": {
      "main": [
        [
          {
            "node": "Check Calendar Availability",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "50883083-568b-489d-9f9e-154bfd8ba383",
  "meta": {
    "instanceId": "473b8e2f44c2c249c630a674e0ffd242a718055278d7a389908825386c510f30"
  },
  "id": "qjGXYKG8lfA6iKPx",
  "tags": []
}